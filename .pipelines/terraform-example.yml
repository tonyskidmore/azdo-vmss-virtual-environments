# Pipeline for simple Terraform testing Azure VMSS self-hosted agents

parameters:

  - name: poolName
    type: string
    default: 'vmss'

variables:
  - group: azure
  - name: workingDirectory
    value: $(System.DefaultWorkingDirectory)/terraform/example


trigger: none

stages:

- stage: 'init_plan'
  pool:
    name: ${{ parameters.poolName }}
  displayName: "Terraform Init & Plan"

  jobs:

  - job: init_plan
    workspace:
      clean: all

    steps:

      - task: Cache@2
        displayName: 'register init cache'
        inputs:
          key: 'terraform | init | "$(Agent.OS)" | "$(Build.BuildNumber)" | "$(Build.SourceVersion)"'
          path: '${{ variables.workingDirectory }}'

      - script: |
          env
        workingDirectory: '${{ variables.workingDirectory }}'
        displayName: 'env'
        env:
          ARM_USE_MSI: "true"

      - script: |
          printf "terraform init\n"
          TF_IN_AUTOMATION=true terraform init -backend=false
        workingDirectory: '${{ variables.workingDirectory }}'
        displayName: 'terraform init'
        env:
          ARM_USE_MSI: "true"

      - script: |
          printf "terraform plan -out tfplan\n"
          TF_IN_AUTOMATION=true terraform plan -out tfplan
        workingDirectory: '${{ variables.workingDirectory }}'
        displayName: 'terraform plan'
        env:
          ARM_USE_MSI: "true"

  - job: waitForValidation
    displayName: 'Review and approve terraform plan before approving'
    pool: server
    timeoutInMinutes: 60
    steps:
    - task: ManualValidation@0
      timeoutInMinutes: 30
      inputs:
        notifyUsers: |
          example@example.com
        instructions: 'Please validate the terraform plan before continuing'
        onTimeout: 'reject'
